# [wasm_bindgen] fn run () { let change_observer = ChangeObserver :: new () ; let node_updater = SingleThreadedNodeUpdater :: new (None) ; let mut executor = StandardExecutor :: new (& change_observer) ; let scheduler = RoundRobinScheduler :: new () ; let node1 = NodeType1 :: new (Some (& change_observer)) ; let node2 = NodeType2 :: new (Some (& change_observer)) ; connect (node1 . output2 . clone () , node2 . input1 . clone ()) ; let flow = Flow :: new_empty ("wasm" , Version :: new (0 , 0 , 1)) ; flow . add_node_with_id_and_desc (node1 , 0u128 , NodeDescription { name : "node1" , description : "node1" , kind : "NodeType1" }) ; flow . add_node_with_id_and_desc (node2 , 1u128 , NodeDescription { name : "node2" , description : "node2" , kind : "NodeType2" }) ; let _ = executor . run (flow , scheduler , node_updater) ; }